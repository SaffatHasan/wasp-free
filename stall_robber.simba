{$IFDEF WINDOWS}{$DEFINE SCRIPT_GUI}{$ENDIF}
{$I WaspLib/osr.simba}

begin
  Login.PlayerIndex := 0; //Type "WLSettings." below to open auto-completion and see extra settings you can set.
end;

type
  ERSStall = (
    TEA_STALL,
    SILK_STALL,
    FRUIT_STALL
  );
var
  CurrentStall: ERSStall := ERSStall.FRUIT_STALL;

type
  EStallRobberState = (
    FIND_STALL,
    ROB_STALL,
    DROP_LOOT,
    WALK_SPOT,
    WAIT_STATE,
    END_SCRIPT
  );

  TStallRobber = record(TBaseWalkerScript)
    State: EStallRobberState;

    Stall: TRSObject;
    SafeSpot: TPoint;
    DropList: TRSItemArray;
    StallCooldown: TCountDown;
  end;

procedure TAntiban.Setup(); override;
begin
  inherited;

  Antiban.Skills := [ERSSkill.THIEVING, ERSSkill.TOTAL];
  Antiban.MinZoom := 5;
  Antiban.MaxZoom := 85;
end;

procedure TStallRobber.SetupStall();
begin
  case CurrentStall of
    ERSStall.TEA_STALL:
      begin
        Self.RSW.Setup(EAST_VARROCK_MAP);
        Self.Stall := RSObjects.TeaStall;
        Self.StallCooldown.Init(7000);
        Self.SafeSpot := [8465, 2808];
        Self.DropList := ['Cup of tea'];
      end;

    ERSStall.SILK_STALL:
      begin
        Self.RSW.Setup(ARDOUGNE_MAP);
        Self.Stall := RSObjects.SilkStall;
        Self.StallCooldown.Init(5000);
        Self.SafeSpot := [6042, 3182];
        Self.DropList := ['Silk'];
      end;

    ERSStall.FRUIT_STALL:
      begin
        Self.RSW.Setup(HOSIDIUS_FRUIT_STALL_HOUSE_MAP);
        Self.Stall := RSObjects.FruitStall;
        Self.StallCooldown.Init(2000);
        Self.DropList := [
          'Cooking apple', 'Banana', 'Jangerberries', 'Lemon', 'Redberries',
          'Pineapple', 'Lime', 'Strawberry', 'Strange fruit',
          'Golovanova fruit top', 'Papaya fruit', 'Silk'
        ];
      end;
  end;

  Self.StallCooldown.Timeout := GetTickCount;
end;

procedure TStallRobber.Init(MaxActions: Int32; MaxTime: Int64); override;
begin
  Self.Name := 'Stall Robber';

  inherited;

  Self.SetupStall();

  if not RSClient.IsLoggedIn() then
    Login.LoginPlayer();

  if WLSettings.RemoteInput.ScriptDebug then
    DebugObjectArray += Self.Stall;
end;


function TStallRobber.HasLoot: Boolean;
var
  Slots: TIntegerArray;
begin
  Result := Inventory.FindItems(Self.DropList, Slots);
end;

function TStallRobber.RobStall(): Boolean;
begin
  if Self.Stall.WalkClick() and (Result := XPBar.WaitXP(2000)) then
  begin
    Self.StallCooldown.Restart(Random(-200, 200));
    WL.Activity.Restart();
  end;
end;


function TStallRobber.DropItems: Boolean;
var
  Slots: TIntegerArray;
begin
  Inventory.FindItems(Self.DropList, Slots);
  Result := Inventory.ShiftDrop(Self.DropList, DROP_PATTERN_SNAKE);

  if Result then
    Self.TotalActions += Length(Slots);
end;


function TStallRobber.GetState(): EStallRobberState;
begin
  if WL.Activity.IsFinished() then
    Exit(END_SCRIPT);
  if Inventory.IsFull() and Self.HasLoot then
    Exit(DROP_LOOT);
  if MainScreen.IsUpText('Steal-from') then
    Exit(ROB_STALL);
  if not Self.StallCooldown.IsFinished() then
    Exit(WAIT_STATE);
  if (Self.SafeSpot <> []) and not Self.RSW.AtTile(Self.SafeSpot, 5) then
    Exit(WALK_SPOT);
  if Self.RSW.AtTile(Self.Stall.TileArray) then
    Exit(FIND_STALL);
end;

procedure TStallRobber.Run(MaxActions: Int32; MaxTime: Int64);
begin
  ClearDebug();
  Self.Init(MaxActions, MaxTime);

  while not Self.ShouldStop do
  begin
    Self.State := Self.GetState();
    Self.SetAction(ToStr(Self.State));
    

    case Self.State of
      DROP_LOOT: Self.DropItems;
      FIND_STALL, ROB_STALL: Self.RobStall();
      WAIT_STATE: Wait(100, 200);
      WALK_SPOT: Self.RSW.WebWalk(Self.SafeSpot, 3, 0.2);
      END_SCRIPT: Break;
    end;

    Self.DoAntiban();
  end;
end;

var
  StallRobber: TStallRobber;

type
  TStallRobberConfig = record(TScriptForm)
    StallSelector: TLabeledCombobox;
  end;

procedure TStallRobberConfig.StartScript(Sender: TObject);
begin
  Self.Init(Sender);

  CurrentStall := ERSStall(Self.StallSelector.Combobox.getItemIndex());
end;

procedure TStallRobberConfig.Setup(); override;
begin
  inherited;

  with Self.StallSelector do
  begin
    Init(Self.SSPanel.Panel); 
    SetCaption('Self.Stall:');
    SetLeft(5);  
    SetTop(35);
    SetWidth(200);
    Combobox.setStyle(csDropDownList);
    Combobox.getItems.Add('Tea Self.Stall');
    Combobox.getItems.Add('Silk Self.Stall');
    Combobox.getItems.Add('Fruit Self.Stall');
    Combobox.setItemIndex(Ord(CurrentStall));
  end;

  Self.WLPanel.StartButton.setOnClick(@Self.StartScript);
end;

procedure TStallRobberConfig.Run(); override;
begin
  Self.Setup();

  inherited;
end;

var
  StallRobberConfig: TStallRobberConfig;

begin
  {$IFDEF SCRIPT_GUI}
  Sync(@StallRobberConfig.Run);
  {$ENDIF}
  StallRobber.Run(WLSettings.MaxActions, WLSettings.MaxTime); 
end.
